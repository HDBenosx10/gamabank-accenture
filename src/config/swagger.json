{
  "swagger": "2.0",
  "info": {
    "description": "Projeto final para o treinamento da turma 6 de NodeJS da Gama Academy, oferecido pela Accenture.",
    "version": "1.0.0",
    "title": "GAMA BANK API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "status",
      "description": "Status server",
      "externalDocs": {
        "description": "Link",
        "url": "http://127.0.0.1:8080/status"
      }
    },
    {
      "name": "signup",
      "description": "Sigup user to create bank account",
      "externalDocs": {
        "description": "Link",
        "url": "http://127.0.0.1:8080/signup"
      }
    },
    {
      "name": "auth",
      "description": "Auth user by JWT",
      "externalDocs": {
        "description": "Link",
        "url": "http://127.0.0.1:8080/auth"
      }
    },
    {
      "name": "account",
      "description": "Operações relacionadas a conta",
      "externalDocs": {
        "description": "Link",
        "url": "http://127.0.0.1:8080/account"
      }
    },
    {
      "name": "creditcard",
      "description": "Operações de crédito",
      "externalDocs": {
        "description": "Link",
        "url": "http://127.0.0.1:8080/creditcard"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Verificar status do servidor",
        "description": "",
        "operationId": "status",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Servidor on line."
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "signup"
        ],
        "summary": "Criar usuários",
        "description": "",
        "operationId": "signup",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Nome de usuário",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Senha",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Nome",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string"
          },
          {
            "name": "cpf",
            "in": "formData",
            "description": "CPF",
            "required": true,
            "type": "string"
          },
          {
            "name": "adress",
            "in": "formData",
            "description": "Endereço",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "formData",
            "description": "Telefone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          },
          "400": {
            "description": "Falha ao criar usuário"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "authUser",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reqUsername",
            "in": "formData",
            "description": "Client username",
            "required": true,
            "type": "string"
          },
          {
            "name": "reqPassword",
            "in": "formData",
            "description": "User Password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado",
            "schema": {
              "$ref": "#/definitions/auth"
            }
          },
          "400": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/account/checkbalance": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Verificar saldo",
        "operationId": "account/checkbalance",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Saldo da conta",
            "schema": {
              "$ref": "#/definitions/auth"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/selfdeposit": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Deposito na própria conta",
        "operationId": "account/selfdeposit",
        "consumes":[
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "name": "value",
            "in": "formData",
            "description": "Valor",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "201": {
            "description": "Depositado com sucesso",
            "schema": {
              "$ref": "#/definitions/auth"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/interntransfer": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Transferências Internas",
        "operationId": "account/internTransfer",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "formData",
            "description": "Valor",
            "required": true,
            "type": "number"
          },
          {
            "name": "toUsername",
            "in": "formData",
            "description": "Nome de usuário",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Transferido com sucesso",
            "schema": {
              "$ref": "#/definitions/auth"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/externtransfer": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Transferências Externas",
        "operationId": "account/externTransfer",
        "consumes":[
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "name": "value",
            "typer": "number",
            "required": true,
            "description": "Valor",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "Transferido com sucesso",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/movementrecords": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Extrato conta corrente do mês",
        "operationId": "account/movementrecords",
        "consumes":[
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Extrato gerado",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/purchasedebt": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Compra no débito",
        "operationId": "account/purchasedebt",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "name": "value",
            "type": "number",
            "description": "Valor",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Compra efetuada",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/purchase": {
      "post": {
        "tags": [
          "creditcard"
        ],
        "summary": "Compra no crédito",
        "operationId": "account/purchasedebt",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "name": "value",
            "type": "number",
            "description": "Valor",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Compra efetuada",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "400": {
            "description": "not found"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "definitions": {
      "account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "user": {
        "type": "object",
        "required": [
          "username",
          "password",
          "email",
          "name",
          "cpf",
          "adress",
          "phone"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}