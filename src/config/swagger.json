{
  "swagger": "2.0",
  "info": {
    "description": "Projeto final para o treinamento da turma 6 de NodeJS da Gama Academy, oferecido pela Accenture.<br>",
    "version": "1.0.0",
    "title": "GAMA BANK API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "gamabank-perseverance.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "status",
      "description": "Verificar status do servidor",
      "externalDocs": {
        "description": "Link",
        "url": "gamabank-perseverance.herokuapp.com/status"
      }
    },
    {
      "name": "signup",
      "description": "Criar usuários",
      "externalDocs": {
        "description": "Link",
        "url": "gamabank-perseverance.herokuapp.com/signup"
      }
    },
    {
      "name": "auth",
      "description": "Autenticar usuário usando JWT",
      "externalDocs": {
        "description": "Link",
        "url": "gamabank-perseverance.herokuapp.com/auth"
      }
    },
    {
      "name": "account",
      "description": "Operações relacionadas a conta",
      "externalDocs": {
        "description": "Link",
        "url": "gamabank-perseverance.herokuapp.com/account"
      }
    },
    {
      "name": "creditcard",
      "description": "Operações de crédito",
      "externalDocs": {
        "description": "Link",
        "url": "gamabank-perseverance.herokuapp.com/creditcard"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Verificar status do servidor",
        "description": "Retorna o status do servidor, se online retorna data e hora atual do servidor",
        "operationId": "status",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Servidor on line.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "signup"
        ],
        "summary": "Criar usuários",
        "description": "Todos os campos são obrigatórios ao criar um novo usuário no GamaBank, ao mesmo tempo é criado os dados do cliente e gerado um cartão com saldo inicial de R$ 200,00.",
        "operationId": "signup",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Nome de usuário",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Senha",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Nome",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string"
          },
          {
            "name": "cpf",
            "in": "formData",
            "description": "CPF",
            "required": true,
            "type": "string"
          },
          {
            "name": "adress",
            "in": "formData",
            "description": "Endereço",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "formData",
            "description": "Telefone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          },
          "400": {
            "description": "Falha ao criar usuário",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "Autenticação via JWT, retorna um token que deve ser passado no header das requisições que requerem idenficação do usuário.",
        "operationId": "authUser",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reqUsername",
            "in": "formData",
            "description": "Client username",
            "required": true,
            "type": "string"
          },
          {
            "name": "reqPassword",
            "in": "formData",
            "description": "User Password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado",
            "schema": {
              "$ref": "#/definitions/auth"
            }
          },
          "400": {
            "description": "Usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        }
      }
    },
    "/account/checkbalance": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Verificar saldo",
        "description": "Consulta o saldo atual da conta, não requer paramentros.",
        "operationId": "account/checkbalance",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Saldo da conta",
            "schema": {
              "$ref": "#/definitions/checkbalance"
            }
          },
          "400": {
            "description": "Falha ao obter o saldo da conta",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/movementrecords": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Extrato conta corrente do mês",
        "description": "Consulta a movimentação da conta, todos os parametros são opcionais.",
        "operationId": "account/movementrecords",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "formData",
            "description": "Valor",
            "type": "string",
            "enum": [
              "deposit",
              "remove"
            ]
          },
          {
            "name": "startDay",
            "in": "formData",
            "description": "Valor",
            "type": "number"
          },
          {
            "name": "finishDay",
            "in": "formData",
            "description": "Valor",
            "type": "number"
          },
          {
            "name": "daysBefore",
            "in": "formData",
            "description": "Valor",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Extrato gerado",
            "schema": {
              "$ref": "#/definitions/movementrecords"
            }
          },
          "400": {
            "description": "Falha ao gerar extrato",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/selfdeposit": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Deposito na própria conta",
        "description": "Deposito na própria conta.",
        "operationId": "account/selfdeposit",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "formData",
            "description": "Valor",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Depositado com sucesso",
            "schema": {
              "$ref": "#/definitions/deposit"
            }
          },
          "400": {
            "description": "Parâmetro inválido",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/externdeposit": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Deposito externo",
        "description": "Deposito de uma pessoa externa não cliente do banco",
        "operationId": "account/externdeposit",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "Nome",
            "required": true,
            "type": "string"
          },
          {
            "name": "cpf",
            "in": "formData",
            "description": "CPF",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountNumber",
            "in": "formData",
            "description": "Número da conta",
            "required": true,
            "type": "number"
          },
          {
            "name": "value",
            "in": "formData",
            "description": "Valor",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Depositado com sucesso",
            "schema": {
              "$ref": "#/definitions/deposit"
            }
          },
          "400": {
            "description": "Parâmetro inválido",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/interntransfer": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Transferências Internas",
        "description": "Transferencia de valor entre contas do mesmo banco.",
        "operationId": "account/internTransfer",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "formData",
            "description": "Valor",
            "required": true,
            "type": "number"
          },
          {
            "name": "toUsername",
            "in": "formData",
            "description": "Nome de usuário",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Transferido com sucesso",
            "schema": {
              "$ref": "#/definitions/internaltransfer"
            }
          },
          "400": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/externtransfer": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Transferências Externas",
        "description": "Transferência entre contas de outros bancos.",
        "operationId": "account/externTransfer",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "required": true,
            "description": "Valor",
            "in": "formData"
          },
          {
            "name": "bankCode",
            "type": "number",
            "required": true,
            "description": "Código do banco",
            "in": "formData"
          },
          {
            "name": "cpf",
            "type": "string",
            "required": true,
            "description": "CPF",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Transferido com sucesso",
            "schema": {
              "$ref": "#/definitions/externtransfer"
            }
          },
          "400": {
            "description": "Falha ao transferir valor",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/account/purchasedebt": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Compra no débito",
        "description": "Compra no débido, um email é enviado para o cliente informando da compra",
        "operationId": "account/purchasedebt",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "description": "Valor",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Compra efetuada",
            "schema": {
              "$ref": "#/definitions/purchasedebt"
            }
          },
          "400": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/creditcard/purchase": {
      "post": {
        "tags": [
          "creditcard"
        ],
        "summary": "Compra no crédito",
        "description": "Compra no credito, um email, um sms e uma chamada telefônica de uma atendente virtual é enviado para o cliente informando da compra.",
        "operationId": "creditcard/purchase",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "description": "Valor",
            "in": "formData",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "description": "Descrição da compra",
            "in": "formData",
            "required": true
          },
          {
            "name": "instalments",
            "type": "number",
            "description": "Quantidade de parcelas",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Compra efetuada",
            "schema": {
              "$ref": "#/definitions/purchase"
            }
          },
          "400": {
            "description": "Preencha todos os campos corretamente e tente novamente",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          },
          "401": {
            "description": "Token inválido ou expirado",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/creditcard/checkinvoice": {
      "get": {
        "tags": [
          "creditcard"
        ],
        "summary": "Verificar fatura",
        "description": "Consulta o extrato/fatura do cartão, é enviado um email com o detramento da fatura para pagamento.",
        "operationId": "creditcard/checkinvoice",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Fatura emitida",
            "schema": {
              "$ref": "#/definitions/invoice"
            }
          },
          "400": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/creditcard/paydueinvoice": {
      "get": {
        "tags": [
          "creditcard"
        ],
        "summary": "Pagar fatura do cartão de crédito",
        "description": "Efetua o pagamento total da fatura do cartão, debitando do saldo disponível da conta.",
        "operationId": "creditcard/paydueinvoice",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Pagamento da fatura do cartão efetuada com sucesso",
            "schema": {
              "$ref": "#/definitions/paydueinvoice"
            }
          },
          "400": {
            "description": "Você não possui saldo suficiente",
            "schema": {
              "$ref": "#/definitions/ApiDefaultResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "status": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "signup": {
      "type": "object",
      "required": [
        "username",
        "password",
        "email",
        "name",
        "cpf",
        "adress",
        "phone"
      ],
      "properties": {
        "Nome": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Usuario": {
          "type": "string"
        },
        "Telefone": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "NumeroDaConta": {
          "type": "number"
        },
        "Agencia": {
          "type": "number"
        },
        "Saldo": {
          "type": "number"
        },
        "NumeroDoCartaoDeCredito": {
          "type": "string"
        },
        "CodigoDeSeguranca": {
          "type": "number"
        },
        "AnoDeExpiracao": {
          "type": "number"
        },
        "LimiteDeCredito": {
          "type": "number"
        },
        "FechamentoDaFatura": {
          "type": "number"
        },
        "PrazoPagamentoFatura": {
          "type": "number"
        },
        "Limite": {
          "type": "number"
        },
        "Emissor": {
          "type": "string"
        }
      }
    },
    "auth": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "checkbalance": {
      "type": "object",
      "properties": {
        "Balaço atual": {
          "type": "string"
        },
        "Data da consulta": {
          "type": "string"
        }
      }
    },
    "deposit": {
      "type": "object",
      "properties": {
        "Conta favorecida": {
          "type": "string"
        },
        "Valor depositado": {
          "type": "string"
        },
        "Data da operação": {
          "type": "string"
        },
        "valor": {
          "type": "string"
        }
      }
    },
    "movementrecords": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "Type": {
          "type": "strin"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "newBalanceRegister": {
      "type": "object",
      "properties": {
        "Mes do Balanco": {
          "type": "number"
        },
        "Balanco inicial do mes": {
          "type": "string"
        },
        "Saldo anterior": {
          "type": "string"
        },
        "Novo saldo": {
          "type": "number"
        }
      }
    },
    "newMovementRegister": {
      "type": "object",
      "properties": {
        "Origem": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "Valor": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "favorecido": {
      "type": "object",
      "properties": {
        "Usuario": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Conta": {
          "type": "string"
        },
        "Agencia": {
          "type": "string"
        }
      }
    },
    "conta": {
      "type": "object",
      "properties": {
        "Conta": {
          "type": "string"
        }
      }
    },
    "operacao": {
      "type": "object",
      "properties": {
        "Valor": {
          "type": "string"
        },
        "Data da operacao": {
          "type": "string"
        }
      }
    },
    "internaltransfer": {
      "type": "object",
      "properties": {
        "Favorecido": {
          "$ref": "#/definitions/favorecido"
        },
        "Conta": {
          "$ref": "#/definitions/conta"
        },
        "Operacao": {
          "$ref": "#/definitions/operacao"
        }
      }
    },
    "favorecidoEx": {
      "type": "object",
      "properties": {
        "CPF": {
          "type": "string"
        },
        "Codigo do banco": {
          "type": "string"
        },
        "Nome do banco": {
          "type": "string"
        }
      }
    },
    "origem": {
      "type": "object",
      "properties": {
        "Conta": {
          "type": "string"
        },
        "Saldo anterior": {
          "type": "string"
        },
        "Novo saldo": {
          "type": "number"
        }
      }
    },
    "externtransfer": {
      "type": "object",
      "required": [
        "value",
        "bankCode",
        "cpf"
      ],
      "properties": {
        "Origem": {
          "$ref": "#/definitions/origem"
        },
        "Favorecido": {
          "$ref": "#/definitions/favorecidoEx"
        },
        "Operacao": {
          "$ref": "#/definitions/operacao"
        }
      }
    },
    "purchasedebt": {
      "type": "object",
      "properties": {
        "newBalanceRegister": {
          "$ref": "#/definitions/newBalanceRegister"
        },
        "newMovementRegister": {
          "$ref": "#/definitions/newMovementRegister"
        }
      }
    },
    "purchase": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Price": {
          "type": "number"
        },
        "AvailableBalanceBeforePurchase": {
          "type": "string"
        },
        "AvailableBalanceNextPurchase": {
          "type": "string"
        },
        "Instalments": {
          "type": "string"
        }
      }
    },
    "invoice": {
      "type": "object",
      "properties": {
        "Balance": {
          "$ref": "#/definitions/invoiceBalance"
        },
        "creditCardsMovements": {
          "$ref": "#/definitions/creditCardsMovements"
        }
      }
    },
    "invoiceBalance": {
      "type": "object",
      "properties": {
        "CreditCardNumber": {
          "type": "string"
        },
        "Month": {
          "type": "number"
        },
        "AvailableBalance": {
          "type": "string"
        },
        "DueBalance": {
          "type": "string"
        }
      }
    },
    "creditCardsMovements": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "value": {
          "type": "number"
        },
        "instalments": {
          "type": "number"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "paydueinvoice": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "saldoAnterior": {
          "type": "number"
        },
        "saldoAtual": {
          "type": "number"
        },
        "valorDaFatura": {
          "type": "number"
        }
      }
    },
    "ApiDefaultResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}